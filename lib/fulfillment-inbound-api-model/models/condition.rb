=begin
#Selling Partner API for Fulfillment Inbound

#The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.

The version of the OpenAPI document: v0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.5.0

=end

require 'date'
require 'time'

module AmzSpApi::FulfillmentInboundApiModel
  class Condition
    NEW_ITEM = "NewItem".freeze
    NEW_WITH_WARRANTY = "NewWithWarranty".freeze
    NEW_OEM = "NewOEM".freeze
    NEW_OPEN_BOX = "NewOpenBox".freeze
    USED_LIKE_NEW = "UsedLikeNew".freeze
    USED_VERY_GOOD = "UsedVeryGood".freeze
    USED_GOOD = "UsedGood".freeze
    USED_ACCEPTABLE = "UsedAcceptable".freeze
    USED_POOR = "UsedPoor".freeze
    USED_REFURBISHED = "UsedRefurbished".freeze
    COLLECTIBLE_LIKE_NEW = "CollectibleLikeNew".freeze
    COLLECTIBLE_VERY_GOOD = "CollectibleVeryGood".freeze
    COLLECTIBLE_GOOD = "CollectibleGood".freeze
    COLLECTIBLE_ACCEPTABLE = "CollectibleAcceptable".freeze
    COLLECTIBLE_POOR = "CollectiblePoor".freeze
    REFURBISHED_WITH_WARRANTY = "RefurbishedWithWarranty".freeze
    REFURBISHED = "Refurbished".freeze
    CLUB = "Club".freeze

    def self.all_vars
      @all_vars ||= [NEW_ITEM, NEW_WITH_WARRANTY, NEW_OEM, NEW_OPEN_BOX, USED_LIKE_NEW, USED_VERY_GOOD, USED_GOOD, USED_ACCEPTABLE, USED_POOR, USED_REFURBISHED, COLLECTIBLE_LIKE_NEW, COLLECTIBLE_VERY_GOOD, COLLECTIBLE_GOOD, COLLECTIBLE_ACCEPTABLE, COLLECTIBLE_POOR, REFURBISHED_WITH_WARRANTY, REFURBISHED, CLUB].freeze
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      return value if Condition.all_vars.include?(value)
      raise "Invalid ENUM value #{value} for class #Condition"
    end
  end
end
