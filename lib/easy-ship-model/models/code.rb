=begin
#Selling Partner API for Easy Ship

#The Selling Partner API for Easy Ship helps you build applications that help sellers manage and ship Amazon Easy Ship orders.  Your Easy Ship applications can:  * Get available time slots for packages to be scheduled for delivery.  * Schedule, reschedule, and cancel Easy Ship orders.  * Print labels, invoices, and warranties.  See the [Marketplace Support Table](doc:easyship-api-v2022-03-23-use-case-guide#marketplace-support-table) for the differences in Easy Ship operations by marketplace.

The version of the OpenAPI document: 2022-03-23

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.5.0

=end

require 'date'
require 'time'

module AmzSpApi::EasyShipModel
  class Code
    INVALID_INPUT = "InvalidInput".freeze
    INVALID_TIME_SLOT_ID = "InvalidTimeSlotId".freeze
    SCHEDULED_PACKAGE_ALREADY_EXISTS = "ScheduledPackageAlreadyExists".freeze
    SCHEDULE_WINDOW_EXPIRED = "ScheduleWindowExpired".freeze
    RETRYABLE_AFTER_GETTING_NEW_SLOTS = "RetryableAfterGettingNewSlots".freeze
    TIME_SLOT_NOT_AVAILABLE = "TimeSlotNotAvailable".freeze
    RESOURCE_NOT_FOUND = "ResourceNotFound".freeze
    INVALID_ORDER_STATE = "InvalidOrderState".freeze
    REGION_NOT_SUPPORTED = "RegionNotSupported".freeze
    ORDER_NOT_ELIGIBLE_FOR_RESCHEDULING = "OrderNotEligibleForRescheduling".freeze
    INTERNAL_SERVER_ERROR = "InternalServerError".freeze

    def self.all_vars
      @all_vars ||= [INVALID_INPUT, INVALID_TIME_SLOT_ID, SCHEDULED_PACKAGE_ALREADY_EXISTS, SCHEDULE_WINDOW_EXPIRED, RETRYABLE_AFTER_GETTING_NEW_SLOTS, TIME_SLOT_NOT_AVAILABLE, RESOURCE_NOT_FOUND, INVALID_ORDER_STATE, REGION_NOT_SUPPORTED, ORDER_NOT_ELIGIBLE_FOR_RESCHEDULING, INTERNAL_SERVER_ERROR].freeze
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      return value if Code.all_vars.include?(value)
      raise "Invalid ENUM value #{value} for class #Code"
    end
  end
end
